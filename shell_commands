chsh -s <new_defult_shell> <username>  // to change shell
-----------------------------------------------------------
set history=<any integer value> //will store the history upto the value given 
-------------------------------------------------------------------------------
<: The process is running at high prioriy.
N: The process is running at low priority.
L: The process has pages locked in memory.
s: The process is a session leader.
l: The process is multi-threaded.
+: The process is running in the forground.
----------------------------------------------------------
if you want to run two commands together, you can enter them on the same prompt line. separated with a semicolon;
$ date ; who
----------------------------------------------------------
linux exit status codes

0 -> Successful completion of the command
1 -> General unkown error 
2 -> missuse of shell
126 ->  The command cant execute 
127 -> command not found
128 -> Invalid exit argument 
128+x -> Fatal erroe with linux signal x
130 -> command terminate with ctl-c
255 -> Eixt status out of range
------------------------------------------------------------
Numeric Comparison 

n1 -eq n2  -> check if n1 equal to n2
n1 -ge n2  -> check if n1 greater than equal to n2
n1 -gt n2  -> check if n1 greater than to n2
n1 -le n2  -> check if n1 less than equal to n2
n1 -lt n2  -> check if n1 less than to n2
n1 -ne n2  -> check if n1 not equal to n2
----------------------------------------------------------------
string comparision

str1 = str2  -> Check if str1 is the same as string str2
str1!= str2  -> Check if str1 is not the same as str2
str1 < str2  -> Check if str1 is less than str2
str1 > str2  -> Check if str1 is greater than str2
-n str1      -> Check if str1 has a length greater than zero.
-z str1      -> Check if str1 has a length of zero.
----------------------------------------------------------------
sed command (stream editor)
s -> substitutes a second text string for the first string pattern specified between the forward slash
example:
echo "This is a test"|sed 's/test/big test/'

sed -e: editing mor than two lines
exmple:
sed -e '
> s/dog/cat/
> s/fox/elephant/
> s/brown/green/
> s/jumpp/jumps/' data1
or you can write as
sed -e 's/dog/cat/;s/fox/elephant/;s/brown/green/; s/jumpp/jumps/' data1

sed -f: reading editor command from file 

A number, indicating the pattern occurrence for which new text should be substituted.
g - Indecates that new text should be substituded for all occurrences of the existing text.
p- Indectes that the contants of the orignal line should be printed 
w file - Write the result of substitution to a file


Numeric line addressing:
sed '2s/jumpp/jumps/' data1        # this will modify at line 2
sed '2,3s/jumpp/jumps/' data1        #range  this will modify at line 2 to line 3

sed '2,$s/jumpp/jumps/' data1        # this will modify from line 2

Using text pattern filters
format:
/pattern/command

example:
sed '/adesh/s/bash/csh/' /etc/passwd

Deleting line
 
sed '2d' data3
sed '2,3d' data3
sed '3,$d' data3
sed '/line 3/d' data3
sed '/line 1/,/line 3/d' data3     #range from line1 to lin3 

Insertion and appending text

The insert command (i) add a new line before spacifed line 
The append commend (a) add a new line after spacified line


sed 'i\This is first line\' data1
sed '3i\this is third line\' data1
sed '$i\this is last line\' data1
sed '2,5i\this is line\' data1

sed 'a\This is second line\' data1
sed '3a\this is forth line\' data1
sed '$a\this is last line\' data1
sed '2,5a\this is line\' data1

